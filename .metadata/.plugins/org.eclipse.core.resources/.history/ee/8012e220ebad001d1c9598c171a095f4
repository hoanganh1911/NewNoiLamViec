/*
 * pn532.c
 *
 *  Created on: Feb 16, 2023
 *      Author: hoanganh
 */
#include "pn532.h"
#define PN532_PACKBUFFSIZ 64
static uint8_t pn532_packetbuffer[PN532_PACKBUFFSIZ];

void pn532_begin(SPI_HandleTypeDef *hspi)
{
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, 0);

    HAL_Delay(1000);

    // not exactly sure why but we have to send a dummy command to get synced up
    pn532_packetbuffer[0] = PN532_COMMAND_GETFIRMWAREVERSION;
    pn532_sendCommandCheckAck(hspi,pn532_packetbuffer, 1, 1000);

    // ignore response!
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, 1);

}
bool pn532_sendCommandCheckAck(SPI_HandleTypeDef *hspi, uint8_t *cmd, uint8_t cmdlen, uint16_t timeout)
{
    // write the command
    pn532_writecommand(obj, cmd, cmdlen);

    // Wait for chip to say its ready!
    if (!pn532_waitready(obj, timeout))
    {
        return false;
    }

    // read acknowledgement
    if (!pn532_readack(obj))
    {
        PN532_DEBUG("No ACK frame received!\n");
        return false;
    }

    // For SPI only wait for the chip to be ready again.
    // This is unnecessary with I2C.
    if (!pn532_waitready(obj, timeout))
    {
        return false;
    }

    return true; // ack'd command
}
